@model Repository.Models.Views.CreateCVApplicationViewModel
<script src="//code.jquery.com/jquery-1.11.0.min.js"></script>
@*<script src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>
<link href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css" rel="stylesheet">*@
@{
    ViewBag.Title = "Dodaj swoją aplikacje na stanowisko - metaTitle - do 60 znaków";
    ViewBag.Opis = "Dodaj swoją aplikacje na stanowisko";
    ViewBag.SlowaKluczowe = "Dodaj swoją aplikacje na stanowisko, słowa kluczowe, keywords";
}

<h2>Dodaj swoją aplikacje na stanowisko</h2>


@using (Html.BeginForm("Create", "CVApplications", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>CVApplication</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.cvApplication.Workplace, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cvApplication.Workplace, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cvApplication.Workplace, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cvApplication.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cvApplication.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cvApplication.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cvApplication.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cvApplication.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cvApplication.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cvApplication.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cvApplication.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cvApplication.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cvApplication.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.cvApplication.Description, new { @class = "form-control", @rows = "3" } )
                @Html.ValidationMessageFor(model => model.cvApplication.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cvApplication.PlaceId, "Skąd o nas wiesz?", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.cvApplication.PlaceId, (SelectList)(ViewBag.PlaceId), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.cvApplication.PlaceId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cvApplication.AvailabilityId, "Dostępność", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.cvApplication.AvailabilityId, (SelectList)(ViewBag.AvailabilityId), htmlAttributes: new { @class = "form-control" })
                
                @Html.ValidationMessageFor(model => model.cvApplication.AvailabilityId, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.Label("Załącz plik", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                    <input class="btn btn-default" type="file" name="@Html.NameFor(x => x.File)" id="@Html.IdFor(x => x.File)" />
                    @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.Label("Załącz plik", new { @class = "control-label col-md-2" })
            
                <div class="input-group">
                    <label class="input-group-btn">
                        <span class="btn btn-primary">
                            Browse&hellip; <input type="file" style="display: none;" name="@Html.NameFor(x => x.File)" id="@Html.IdFor(x => x.File)">
                        </span>
                    </label>
                    <input type="text" class="form-control" readonly>
                </div>
                <span class="help-block">
                    @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
                </span>
                
            </div>

        @*<div class="form-group">
            @Html.Label("Zgoda", new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.CheckBoxFor(m => m.Consent)
                @Html.ValidationMessageFor(model => model.Consent, "", new { @class = "text-danger" })
                <p>
                    Wyrażam zgodę na przetwarzanie danych
                </p>
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Dodaj" class="btn btn-success" />
            </div>
        </div>
    </div>
}

            <div>
                @Html.ActionLink("Powrót", "Index", null, new { @class = "btn btn-warning" })
            </div>

            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
                @Scripts.Render("~/bundles/jquery")
                @Scripts.Render("~/ bundles / bootstrap")
            }


<script>
    $(function () {

        // We can attach the `fileselect` event to all file inputs on the page
        $(document).on('change', ':file', function () {
            var input = $(this),
                numFiles = input.get(0).files ? input.get(0).files.length : 1,
                label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
            input.trigger('fileselect', [numFiles, label]);
        });

        // We can watch for our custom `fileselect` event like this
        $(document).ready(function () {
            $(':file').on('fileselect', function (event, numFiles, label) {

                var input = $(this).parents('.input-group').find(':text'),
                    log = numFiles > 1 ? numFiles + ' files selected' : label;

                if (input.length) {
                    input.val(log);
                } else {
                    if (log) alert(log);
                }

            });
        });

    });
</script>
